pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

steps:
  - task: CacheBeta@0
    inputs:
      key: $(Agent.OS)
      path: $(GRADLE_USER_HOME)
    displayName: "Gradle: setup build cache"

  - task: DownloadPackage@1
    inputs:
      packageType: 'upack'
      feed: '/76852042-5a8d-4247-969f-47caba0cae08'
      view: '56ddc552-069b-4fda-9122-46a634ec7e8a'
      definition: '301d6f40-3540-4afb-abcb-cf9be945c859'
      version: '1.0.0-377'
      downloadPath: '$(Build.SourcesDirectory)/game/data/fs/377'
    displayName: "Misc: download cache data"

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'apollo-rsps-sonarcloud'
      organization: 'apollo-rsps'
      scannerMode: 'Other'
    displayName: "SonarCloud: prepare analysis"

  - task: Gradle@2
    displayName: "Gradle: build"
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dsonar.host.url=https://sonarcloud.io'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'check jacocoReport sonarqube'

  - script: |
      ./gradlew --stop
    displayName: "Gradle: stop daemon"

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: "SonarCloud: publish quality gate"

  - script: |
      bash <(curl -s https://codecov.io/bash) -t "${CODECOV_TOKEN}"
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)
    displayName: "Codecov: publish coverage"