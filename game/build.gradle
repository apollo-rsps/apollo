description = 'Apollo Game'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: "$kotlinVersion"
    }
}

apply plugin: 'kotlin'

allprojects {
    it.plugins.withId('kotlin') {
        kotlin { experimental { coroutines 'enable' } }
    }
}

dependencies {
    compile project(':cache')
    compile project(':net')
    compile project(':util')

    compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: '2.0.21'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version: "$kotlinVersion"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: "$kotlinVersion"
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '0.16'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.16'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.4'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.4'

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'org.apollo.Server'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ['-Xmx1750M']
    workingDir = "$rootDir"
}